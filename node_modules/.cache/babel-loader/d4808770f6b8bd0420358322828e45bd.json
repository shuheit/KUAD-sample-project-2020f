{"ast":null,"code":"var _jsxFileName = \"/Users/shuheit/Development/KUAD/react/sample-react-project-2020f/src/components/TodoContainer.js\";\nimport React, { Component } from 'react';\nimport TodoCounter from './TodoCounter';\nimport TodoList from './TodoList';\nimport TodoForm from './TodoForm';\n\nclass TodoContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todoData: [\"荷物を受け取る\", \"歯医者を予約する\", \"休暇申請をする\", \"ガソリンを入れる\"],\n      remainigCount: 4,\n      completedCount: 2\n    };\n  }\n\n  addTodo(title) {\n    //入力されたTodoをTodoの配列に追加し、stateを更新する\n    const updatedTodoData = [...this.state.todoData, title];\n    this.setState({\n      todoData: updatedTodoData\n    });\n    this.setState({\n      remainigCount: this.state.remainigCount + 1\n    });\n  }\n\n  completeTodo(title, isCompleted) {\n    //Todoの配列から、完了or削除したTodoを削除する\n    const updatedTodoData = this.state.todoData;\n    const index = updatedTodoData.indexOf(title);\n\n    if (index >= 0) {\n      updatedTodoData.splice(index, 1);\n    } //各state更新\n\n\n    this.setState({\n      todoData: updatedTodoData\n    });\n    this.setState({\n      remainigCount: this.state.remainigCount - 1\n    });\n\n    if (isCompleted) {\n      this.setState({\n        completedCount: this.state.completedCount + 1\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"todo-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TodoCounter, {\n      remainigCount: this.state.remainigCount,\n      completedCount: this.state.completedCount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(TodoList, {\n      todoData: this.state.todoData,\n      completeTodo: this.completeTodo.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(TodoForm, {\n      addTodo: this.addTodo.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default TodoContainer;","map":{"version":3,"sources":["/Users/shuheit/Development/KUAD/react/sample-react-project-2020f/src/components/TodoContainer.js"],"names":["React","Component","TodoCounter","TodoList","TodoForm","TodoContainer","constructor","props","state","todoData","remainigCount","completedCount","addTodo","title","updatedTodoData","setState","completeTodo","isCompleted","index","indexOf","splice","render","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AACpCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,CAAC,SAAD,EAAY,UAAZ,EAAwB,SAAxB,EAAmC,UAAnC,CADC;AAEXC,MAAAA,aAAa,EAAE,CAFJ;AAGXC,MAAAA,cAAc,EAAE;AAHL,KAAb;AAKD;;AAEDC,EAAAA,OAAO,CAACC,KAAD,EAAQ;AACb;AACA,UAAMC,eAAe,GAAG,CAAC,GAAG,KAAKN,KAAL,CAAWC,QAAf,EAAyBI,KAAzB,CAAxB;AACA,SAAKE,QAAL,CAAe;AAACN,MAAAA,QAAQ,EAAEK;AAAX,KAAf;AACA,SAAKC,QAAL,CAAe;AAACL,MAAAA,aAAa,EAAE,KAAKF,KAAL,CAAWE,aAAX,GAAyB;AAAzC,KAAf;AACD;;AAEDM,EAAAA,YAAY,CAACH,KAAD,EAAQI,WAAR,EAAqB;AAC/B;AACA,UAAMH,eAAe,GAAG,KAAKN,KAAL,CAAWC,QAAnC;AACA,UAAMS,KAAK,GAAGJ,eAAe,CAACK,OAAhB,CAAwBN,KAAxB,CAAd;;AACA,QAAGK,KAAK,IAAI,CAAZ,EAAc;AAAEJ,MAAAA,eAAe,CAACM,MAAhB,CAAuBF,KAAvB,EAA8B,CAA9B;AAAmC,KAJpB,CAM/B;;;AACA,SAAKH,QAAL,CAAe;AAACN,MAAAA,QAAQ,EAAEK;AAAX,KAAf;AACA,SAAKC,QAAL,CAAe;AAACL,MAAAA,aAAa,EAAE,KAAKF,KAAL,CAAWE,aAAX,GAAyB;AAAzC,KAAf;;AACA,QAAGO,WAAH,EAAgB;AACd,WAAKF,QAAL,CAAe;AAACJ,QAAAA,cAAc,EAAE,KAAKH,KAAL,CAAWG,cAAX,GAA0B;AAA3C,OAAf;AACD;AACF;;AAEDU,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AACE,MAAA,aAAa,EAAI,KAAKb,KAAL,CAAWE,aAD9B;AAEE,MAAA,cAAc,EAAI,KAAKF,KAAL,CAAWG,cAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAKE,oBAAC,QAAD;AACE,MAAA,QAAQ,EAAI,KAAKH,KAAL,CAAWC,QADzB;AAEE,MAAA,YAAY,EAAI,KAAKO,YAAL,CAAkBM,IAAlB,CAAuB,IAAvB,CAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eASE,oBAAC,QAAD;AACE,MAAA,OAAO,EAAI,KAAKV,OAAL,CAAaU,IAAb,CAAkB,IAAlB,CADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF;AAeD;;AA/CmC;;AAkDtC,eAAejB,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport TodoCounter from './TodoCounter';\nimport TodoList from './TodoList';\nimport TodoForm from './TodoForm';\n\nclass TodoContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todoData: [\"荷物を受け取る\", \"歯医者を予約する\", \"休暇申請をする\", \"ガソリンを入れる\" ],\n      remainigCount: 4,\n      completedCount: 2\n    };\n  }\n\n  addTodo(title) {\n    //入力されたTodoをTodoの配列に追加し、stateを更新する\n    const updatedTodoData = [...this.state.todoData, title];\n    this.setState( {todoData: updatedTodoData} );\n    this.setState( {remainigCount: this.state.remainigCount+1 } );\n  }\n\n  completeTodo(title, isCompleted) {\n    //Todoの配列から、完了or削除したTodoを削除する\n    const updatedTodoData = this.state.todoData;\n    const index = updatedTodoData.indexOf(title);\n    if(index >= 0){ updatedTodoData.splice(index, 1); }\n\n    //各state更新\n    this.setState( {todoData: updatedTodoData} );\n    this.setState( {remainigCount: this.state.remainigCount-1 } );\n    if(isCompleted) {\n      this.setState( {completedCount: this.state.completedCount+1 } );\n    }\n  }\n\n  render() {\n    return(\n      <div className=\"todo-container\">\n        <TodoCounter\n          remainigCount = {this.state.remainigCount}\n          completedCount = {this.state.completedCount}\n        />\n        <TodoList\n          todoData = {this.state.todoData}\n          completeTodo = {this.completeTodo.bind(this)}\n        />\n        <TodoForm\n          addTodo = {this.addTodo.bind(this)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default TodoContainer;\n"]},"metadata":{},"sourceType":"module"}